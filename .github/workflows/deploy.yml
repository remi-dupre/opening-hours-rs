name: Deploy

on:
  - push

env:
  CARGO_TERM_COLOR: always

jobs:
  # ---
  # --- Check that all versions are consistency accross packages
  # ---
  check-version:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: scripts

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependancies
        run: poetry install

      - name: Check version consistency
        run: poetry run ./check-version.py

  # ---
  # --- Build an deploy Rust packages
  # ---
  deploy-rust:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 1
      matrix:
        crate:
          - compact-calendar
          - opening-hours-syntax
          - .

    defaults:
      run:
        working-directory: ${{ matrix.crate }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - name: Login to crates.io
        run: cargo login $TOKEN
        if: github.ref == 'refs/heads/master'
        env:
          TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

      - name: Publish to crates.io
        run: cargo publish
        if: github.ref == 'refs/heads/master'

  # ---
  # --- Build and deploy Python bindings
  # ---
  deploy-python:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: python

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          profile: minimal

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependancies
        run: poetry install

      - name: Check packaging for pypi.org
        run: poetry run maturin develop

      - name: Build python documentation
        run: poetry run pdoc -o docs -d numpy opening_hours

      - name: Publish to pypi.org
        run: poetry run maturin publish --username $USER --password $PASS
        if: github.ref == 'refs/heads/master'
        env:
          USER: remi-dupre
          PASS: ${{ secrets.PYPI_PASSWORD }}

      - name: Publish to github pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./python/docs
